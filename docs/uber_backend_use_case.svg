<?xml version="1.0" encoding="UTF-8"?>
<svg width="2200" height="1480" viewBox="0 0 2200 1480" xmlns="http://www.w3.org/2000/svg">
  <defs>
    <style type="text/css"><![CDATA[
      text { font-family: 'Segoe UI', 'Helvetica Neue', Arial, sans-serif; fill: #1f2933; }
      .title { font-size: 52px; font-weight: 700; }
      .subtitle { font-size: 28px; font-weight: 500; fill: #1e3a8a; }
      .section-title { font-size: 30px; font-weight: 700; }
      .body { font-size: 22px; font-weight: 500; line-height: 1.4; }
      .note { font-size: 18px; fill: #475569; }
      .metric { font-size: 18px; fill: #1e3a8a; font-weight: 600; }
      .legend-label { font-size: 20px; fill: #1f2933; }
    ]]></style>
    <linearGradient id="bgGradient" x1="0%" y1="0%" x2="100%" y2="100%">
      <stop offset="0%" stop-color="#eff6ff" />
      <stop offset="100%" stop-color="#e0f2fe" />
    </linearGradient>
    <marker id="arrow-blue" markerWidth="12" markerHeight="12" refX="12" refY="3.5" orient="auto" markerUnits="strokeWidth">
      <path d="M0,0 L12,3.5 L0,7 z" fill="#2563eb" />
    </marker>
    <marker id="arrow-orange" markerWidth="12" markerHeight="12" refX="12" refY="3.5" orient="auto" markerUnits="strokeWidth">
      <path d="M0,0 L12,3.5 L0,7 z" fill="#f97316" />
    </marker>
    <marker id="arrow-green" markerWidth="12" markerHeight="12" refX="12" refY="3.5" orient="auto" markerUnits="strokeWidth">
      <path d="M0,0 L12,3.5 L0,7 z" fill="#16a34a" />
    </marker>
    <marker id="arrow-purple" markerWidth="12" markerHeight="12" refX="12" refY="3.5" orient="auto" markerUnits="strokeWidth">
      <path d="M0,0 L12,3.5 L0,7 z" fill="#7c3aed" />
    </marker>
  </defs>

  <rect width="2200" height="1480" rx="48" ry="48" fill="url(#bgGradient)" stroke="#93c5fd" stroke-width="4" />

  <!-- Header -->
  <rect x="120" y="80" width="1960" height="160" rx="32" ry="32" fill="#1d4ed8" opacity="0.08" stroke="#1d4ed8" stroke-width="3" />
  <text x="1100" y="160" class="title" text-anchor="middle">Uber Backend Clone – End-to-End Architecture</text>
  <text x="1100" y="215" class="subtitle" text-anchor="middle">C++17/20 Microservices • Async Messaging • Geo-spatial Intelligence • Observability</text>

  <!-- Client zone -->
  <rect x="120" y="280" width="320" height="820" rx="28" ry="28" fill="#ecfeff" stroke="#0f766e" stroke-width="3" />
  <text x="280" y="340" class="section-title" text-anchor="middle" fill="#0f766e">Client Interfaces</text>

  <g transform="translate(180,370)">
    <rect width="200" height="150" rx="20" ry="20" fill="#f0fdf4" stroke="#16a34a" stroke-width="3" />
    <text x="100" y="50" class="body" text-anchor="middle">Rider Mobile</text>
    <text x="100" y="90" class="note" text-anchor="middle">Swift/Kotlin</text>
    <text x="100" y="120" class="note" text-anchor="middle">REST + WebSockets</text>
  </g>

  <g transform="translate(180,550)">
    <rect width="200" height="150" rx="20" ry="20" fill="#fef2f2" stroke="#dc2626" stroke-width="3" />
    <text x="100" y="50" class="body" text-anchor="middle">Driver Mobile</text>
    <text x="100" y="90" class="note" text-anchor="middle">Android Auto focus</text>
    <text x="100" y="120" class="note" text-anchor="middle">Live GPS streaming</text>
  </g>

  <g transform="translate(180,730)">
    <rect width="200" height="150" rx="20" ry="20" fill="#ede9fe" stroke="#7c3aed" stroke-width="3" />
    <text x="100" y="50" class="body" text-anchor="middle">Admin Console</text>
    <text x="100" y="90" class="note" text-anchor="middle">React dashboard</text>
    <text x="100" y="120" class="note" text-anchor="middle">Analytics + Support</text>
  </g>

  <g transform="translate(180,910)">
    <rect width="200" height="150" rx="20" ry="20" fill="#e0f2fe" stroke="#1d4ed8" stroke-width="3" />
    <text x="100" y="50" class="body" text-anchor="middle">3rd Party APIs</text>
    <text x="100" y="90" class="note" text-anchor="middle">Payments, Maps,</text>
    <text x="100" y="120" class="note" text-anchor="middle">Fraud detection</text>
  </g>

  <!-- Experience tier -->
  <rect x="520" y="280" width="380" height="240" rx="28" ry="28" fill="#e0f2f1" stroke="#0f766e" stroke-width="3" />
  <text x="710" y="330" class="section-title" text-anchor="middle" fill="#0f766e">Edge &amp; Experience Tier</text>
  <text x="540" y="380" class="body">• API Gateway (nghttp2) – TLS termination, rate limits</text>
  <text x="540" y="415" class="body">• BFF adapters for Rider/Driver apps</text>
  <text x="540" y="450" class="body">• JWT validation &amp; feature flag evaluation</text>

  <rect x="520" y="560" width="380" height="200" rx="24" ry="24" fill="#ede9fe" stroke="#7c3aed" stroke-width="3" />
  <text x="710" y="610" class="section-title" text-anchor="middle" fill="#6d28d9">Real-time Comms</text>
  <text x="540" y="660" class="body">• WebSocket hub (ride progress, ETA)</text>
  <text x="540" y="695" class="body">• Push notifications fan-out via RabbitMQ</text>

  <!-- Platform services container -->
  <rect x="940" y="280" width="780" height="820" rx="36" ry="36" fill="#ffffff" stroke="#c7d2fe" stroke-width="4" />
  <text x="1330" y="330" class="section-title" text-anchor="middle" fill="#1d4ed8">Domain Microservices (C++ gRPC/REST)</text>

  <!-- UserManager -->
  <g transform="translate(980,360)">
    <rect width="320" height="220" rx="26" ry="26" fill="#e0ecff" stroke="#1d4ed8" stroke-width="3" />
    <text x="160" y="50" class="section-title" text-anchor="middle">UserManager</text>
    <text x="40" y="95" class="body">• Sign-up/login, token issuance</text>
    <text x="40" y="130" class="body">• Profile, payment methods</text>
    <text x="40" y="165" class="body">• Emits <tspan fill="#f97316">user.created</tspan> events</text>
  </g>

  <!-- RideManager -->
  <g transform="translate(1320,360)">
    <rect width="320" height="250" rx="26" ry="26" fill="#fee2e2" stroke="#dc2626" stroke-width="3" />
    <text x="160" y="50" class="section-title" text-anchor="middle">RideManager</text>
    <text x="40" y="95" class="body">• Ride orchestration state machine</text>
    <text x="40" y="130" class="body">• Driver matching, surge pricing</text>
    <text x="40" y="165" class="body">• Consumes <tspan fill="#2563eb">availability</tspan>,</text>
    <text x="40" y="200" class="body">  publishes <tspan fill="#f97316">ride.status</tspan></text>
  </g>

  <!-- LocationManager -->
  <g transform="translate(980,630)">
    <rect width="320" height="240" rx="26" ry="26" fill="#dcfce7" stroke="#16a34a" stroke-width="3" />
    <text x="160" y="50" class="section-title" text-anchor="middle">LocationManager</text>
    <text x="40" y="95" class="body">• H3 geohash indexing &amp; proximity search</text>
    <text x="40" y="130" class="body">• Ingests GPS streams (3s cadence)</text>
    <text x="40" y="165" class="body">• Publishes <tspan fill="#f97316">driver.location</tspan></text>
  </g>

  <!-- Billing/Payments Service -->
  <g transform="translate(1320,650)">
    <rect width="320" height="220" rx="26" ry="26" fill="#fef3c7" stroke="#f59e0b" stroke-width="3" />
    <text x="160" y="50" class="section-title" text-anchor="middle">BillingAdapter</text>
    <text x="40" y="95" class="body">• Fare calculation, surge adjustments</text>
    <text x="40" y="130" class="body">• Integrates Stripe/Adyen via gRPC</text>
    <text x="40" y="165" class="body">• Handles refunds &amp; fraud checks</text>
  </g>

  <!-- Shared Utils -->
  <g transform="translate(1140,900)">
    <rect width="360" height="160" rx="26" ry="26" fill="#ede9fe" stroke="#7c3aed" stroke-width="3" />
    <text x="180" y="45" class="section-title" text-anchor="middle">Shared Utilities</text>
    <text x="30" y="85" class="body">• Thread pools, async runtime, env loader</text>
    <text x="30" y="120" class="body">• Structured logging + OpenTelemetry emitters</text>
  </g>

  <!-- Data platform -->
  <rect x="1760" y="280" width="320" height="820" rx="36" ry="36" fill="#f8fafc" stroke="#475569" stroke-width="3" />
  <text x="1920" y="330" class="section-title" text-anchor="middle" fill="#0f172a">State &amp; Data Platform</text>

  <g transform="translate(1790,370)">
    <rect width="260" height="140" rx="20" ry="20" fill="#dbeafe" stroke="#1d4ed8" stroke-width="2" />
    <text x="130" y="45" class="body" text-anchor="middle">PostgreSQL</text>
    <text x="130" y="85" class="note" text-anchor="middle">Service-specific schemas</text>
  </g>

  <g transform="translate(1790,540)">
    <rect width="260" height="140" rx="20" ry="20" fill="#fee2f2" stroke="#db2777" stroke-width="2" />
    <text x="130" y="45" class="body" text-anchor="middle">Redis Cache</text>
    <text x="130" y="85" class="note" text-anchor="middle">Driver ETA &amp; session cache</text>
  </g>

  <g transform="translate(1790,710)">
    <rect width="260" height="140" rx="20" ry="20" fill="#fef9c3" stroke="#facc15" stroke-width="2" />
    <text x="130" y="45" class="body" text-anchor="middle">Kafka Cluster</text>
    <text x="130" y="85" class="note" text-anchor="middle">Topic: ride.status, user.created</text>
  </g>

  <g transform="translate(1790,880)">
    <rect width="260" height="140" rx="20" ry="20" fill="#ede9fe" stroke="#7c3aed" stroke-width="2" />
    <text x="130" y="45" class="body" text-anchor="middle">RabbitMQ</text>
    <text x="130" y="85" class="note" text-anchor="middle">Retries, push fan-out</text>
  </g>

  <!-- Interconnections -->
  <line x1="440" y1="445" x2="520" y2="400" stroke="#2563eb" stroke-width="5" marker-end="url(#arrow-blue)" />
  <line x1="440" y1="625" x2="520" y2="640" stroke="#2563eb" stroke-width="5" marker-end="url(#arrow-blue)" />
  <line x1="440" y1="805" x2="520" y2="610" stroke="#7c3aed" stroke-width="4" marker-end="url(#arrow-purple)" />
  <line x1="440" y1="985" x2="520" y2="400" stroke="#16a34a" stroke-width="4" marker-end="url(#arrow-green)" />

  <line x1="900" y1="380" x2="980" y2="420" stroke="#2563eb" stroke-width="4" marker-end="url(#arrow-blue)" />
  <line x1="900" y1="650" x2="980" y2="700" stroke="#2563eb" stroke-width="4" marker-end="url(#arrow-blue)" />
  <line x1="900" y1="640" x2="980" y2="430" stroke="#f97316" stroke-width="4" marker-end="url(#arrow-orange)" />

  <line x1="1300" y1="470" x2="1320" y2="470" stroke="#2563eb" stroke-width="4" marker-end="url(#arrow-blue)" />
  <line x1="1300" y1="520" x2="1320" y2="520" stroke="#f97316" stroke-width="4" marker-end="url(#arrow-orange)" />
  <line x1="1300" y1="710" x2="1320" y2="720" stroke="#f97316" stroke-width="4" marker-end="url(#arrow-orange)" />
  <line x1="1640" y1="450" x2="1760" y2="440" stroke="#2563eb" stroke-width="4" marker-end="url(#arrow-blue)" />
  <line x1="1640" y1="520" x2="1760" y2="600" stroke="#16a34a" stroke-width="4" marker-end="url(#arrow-green)" />
  <line x1="1640" y1="720" x2="1760" y2="780" stroke="#f97316" stroke-width="4" marker-end="url(#arrow-orange)" />
  <line x1="1640" y1="760" x2="1760" y2="910" stroke="#7c3aed" stroke-width="4" marker-end="url(#arrow-purple)" />

  <line x1="1140" y1="980" x2="1030" y2="820" stroke="#7c3aed" stroke-width="4" marker-end="url(#arrow-purple)" />
  <line x1="1500" y1="980" x2="1620" y2="820" stroke="#7c3aed" stroke-width="4" marker-end="url(#arrow-purple)" />

  <!-- Async event fabric -->
  <rect x="940" y="1140" width="780" height="220" rx="32" ry="32" fill="#f1f5f9" stroke="#94a3b8" stroke-width="3" />
  <text x="1330" y="1190" class="section-title" text-anchor="middle" fill="#0f172a">Event &amp; Data Flow</text>
  <text x="970" y="1240" class="body">• Kafka topics: user.created, driver.location, ride.status, billing.charged</text>
  <text x="970" y="1280" class="body">• RabbitMQ queues: notification.push, billing.retry, geo.refresh</text>
  <text x="970" y="1320" class="body">• Schema registry + protobuf contracts in <tspan fill="#1d4ed8">sharedResources/proto</tspan></text>

  <!-- Observability & Ops -->
  <rect x="120" y="1140" width="800" height="220" rx="32" ry="32" fill="#f8fafc" stroke="#475569" stroke-width="3" />
  <text x="520" y="1190" class="section-title" text-anchor="middle" fill="#0f172a">Observability &amp; Ops</text>
  <text x="150" y="1240" class="body">• Prometheus exporters, Grafana dashboards</text>
  <text x="150" y="1280" class="body">• OpenTelemetry traces shipped to Jaeger</text>
  <text x="150" y="1320" class="body">• GitHub Actions → Docker builds → Helm deploy</text>

  <!-- Legend -->
  <rect x="1820" y="1160" width="260" height="220" rx="28" ry="28" fill="#ffffff" stroke="#1e293b" stroke-width="3" />
  <text x="1950" y="1210" class="section-title" text-anchor="middle">Legend</text>
  <g transform="translate(1840,1230)">
    <rect width="28" height="28" rx="6" ry="6" fill="#e0ecff" stroke="#1d4ed8" stroke-width="2" />
    <text x="40" y="22" class="legend-label">User/API Service</text>
  </g>
  <g transform="translate(1840,1280)">
    <rect width="28" height="28" rx="6" ry="6" fill="#fee2e2" stroke="#dc2626" stroke-width="2" />
    <text x="40" y="22" class="legend-label">Ride Orchestration</text>
  </g>
  <g transform="translate(1840,1330)">
    <rect width="28" height="28" rx="6" ry="6" fill="#dcfce7" stroke="#16a34a" stroke-width="2" />
    <text x="40" y="22" class="legend-label">Location/Geo</text>
  </g>
  <g transform="translate(1840,1380)">
    <line x1="0" y1="14" x2="28" y2="14" stroke="#2563eb" stroke-width="4" marker-end="url(#arrow-blue)" />
    <text x="40" y="20" class="legend-label">Synchronous REST/gRPC</text>
  </g>
  <g transform="translate(1990,1380)">
    <line x1="0" y1="14" x2="28" y2="14" stroke="#f97316" stroke-width="4" marker-end="url(#arrow-orange)" />
    <text x="40" y="20" class="legend-label">Async/Event flow</text>
  </g>

  <!-- Latency metrics -->
  <g transform="translate(1760,1060)">
    <rect width="320" height="80" rx="20" ry="20" fill="#cffafe" stroke="#0891b2" stroke-width="2" />
    <text x="160" y="40" class="metric" text-anchor="middle">P95 Rider request → driver match &lt; 1.5s</text>
  </g>
</svg>
