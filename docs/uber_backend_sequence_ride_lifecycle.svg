<?xml version="1.0" encoding="UTF-8"?>
<svg width="2400" height="1500" viewBox="0 0 2400 1500" xmlns="http://www.w3.org/2000/svg">
  <defs>
    <style type="text/css"><![CDATA[
      text { font-family: 'Segoe UI', 'Helvetica Neue', Arial, sans-serif; fill: #0f172a; }
      .title { font-size: 52px; font-weight: 700; }
      .subtitle { font-size: 28px; font-weight: 500; fill: #1d4ed8; }
      .lane-title { font-size: 30px; font-weight: 700; fill: #1e3a8a; }
      .body { font-size: 22px; font-weight: 500; }
      .note { font-size: 18px; fill: #475569; }
    ]]></style>
    <linearGradient id="seqBg" x1="0%" y1="0%" x2="100%" y2="100%">
      <stop offset="0%" stop-color="#f1f5f9" />
      <stop offset="100%" stop-color="#e0f2fe" />
    </linearGradient>
    <marker id="arrow" markerWidth="12" markerHeight="12" refX="12" refY="3" orient="auto" markerUnits="strokeWidth">
      <path d="M0,0 L12,3 L0,6 z" fill="#1d4ed8" />
    </marker>
    <marker id="arrow-async" markerWidth="12" markerHeight="12" refX="12" refY="3" orient="auto" markerUnits="strokeWidth">
      <path d="M0,0 L12,3 L0,6 z" fill="#f97316" />
    </marker>
  </defs>

  <rect width="2400" height="1500" rx="48" ry="48" fill="url(#seqBg)" stroke="#bfdbfe" stroke-width="4" />

  <rect x="160" y="80" width="2080" height="150" rx="36" ry="36" fill="#1d4ed8" opacity="0.08" stroke="#1d4ed8" stroke-width="3" />
  <text x="1200" y="155" class="title" text-anchor="middle">Ride Lifecycle – Sequence Overview</text>
  <text x="1200" y="210" class="subtitle" text-anchor="middle">From rider request through payout, across synchronous &amp; async channels</text>

  <!-- Lifelines -->
  <g>
    <line x1="320" y1="260" x2="320" y2="1320" stroke="#94a3b8" stroke-width="4" stroke-dasharray="12 16" />
    <rect x="250" y="260" width="140" height="80" rx="18" ry="18" fill="#ecfeff" stroke="#0f766e" stroke-width="3" />
    <text x="320" y="310" class="lane-title" text-anchor="middle">Rider App</text>
  </g>
  <g>
    <line x1="600" y1="260" x2="600" y2="1320" stroke="#94a3b8" stroke-width="4" stroke-dasharray="12 16" />
    <rect x="520" y="260" width="160" height="80" rx="18" ry="18" fill="#dbeafe" stroke="#1d4ed8" stroke-width="3" />
    <text x="600" y="310" class="lane-title" text-anchor="middle">API Gateway</text>
  </g>
  <g>
    <line x1="900" y1="260" x2="900" y2="1320" stroke="#94a3b8" stroke-width="4" stroke-dasharray="12 16" />
    <rect x="820" y="260" width="160" height="80" rx="18" ry="18" fill="#e0ecff" stroke="#1d4ed8" stroke-width="3" />
    <text x="900" y="310" class="lane-title" text-anchor="middle">UserManager</text>
  </g>
  <g>
    <line x1="1200" y1="260" x2="1200" y2="1320" stroke="#94a3b8" stroke-width="4" stroke-dasharray="12 16" />
    <rect x="1120" y="260" width="160" height="80" rx="18" ry="18" fill="#fee2e2" stroke="#dc2626" stroke-width="3" />
    <text x="1200" y="310" class="lane-title" text-anchor="middle">RideManager</text>
  </g>
  <g>
    <line x1="1500" y1="260" x2="1500" y2="1320" stroke="#94a3b8" stroke-width="4" stroke-dasharray="12 16" />
    <rect x="1420" y="260" width="160" height="80" rx="18" ry="18" fill="#dcfce7" stroke="#16a34a" stroke-width="3" />
    <text x="1500" y="310" class="lane-title" text-anchor="middle">LocationManager</text>
  </g>
  <g>
    <line x1="1800" y1="260" x2="1800" y2="1320" stroke="#94a3b8" stroke-width="4" stroke-dasharray="12 16" />
    <rect x="1720" y="260" width="160" height="80" rx="18" ry="18" fill="#fef3c7" stroke="#f59e0b" stroke-width="3" />
    <text x="1800" y="310" class="lane-title" text-anchor="middle">BillingAdapter</text>
  </g>
  <g>
    <line x1="2100" y1="260" x2="2100" y2="1320" stroke="#94a3b8" stroke-width="4" stroke-dasharray="12 16" />
    <rect x="2040" y="260" width="120" height="80" rx="18" ry="18" fill="#ede9fe" stroke="#7c3aed" stroke-width="3" />
    <text x="2100" y="310" class="lane-title" text-anchor="middle">Event Bus</text>
  </g>

  <!-- Steps -->
  <g>
    <rect x="260" y="360" width="180" height="70" rx="16" ry="16" fill="#ecfeff" stroke="#0f766e" stroke-width="2" />
    <text x="350" y="402" class="body" text-anchor="middle">1. Request ride</text>
    <line x1="440" y1="395" x2="520" y2="395" stroke="#1d4ed8" stroke-width="4" marker-end="url(#arrow)" />
    <text x="480" y="370" class="note" text-anchor="middle">POST /rides</text>
  </g>

  <g>
    <rect x="520" y="440" width="200" height="70" rx="16" ry="16" fill="#dbeafe" stroke="#1d4ed8" stroke-width="2" />
    <text x="620" y="482" class="body" text-anchor="middle">2. Validate token</text>
    <line x1="720" y1="475" x2="820" y2="475" stroke="#1d4ed8" stroke-width="4" marker-end="url(#arrow)" />
    <text x="770" y="448" class="note" text-anchor="middle">JWT introspect</text>
  </g>

  <g>
    <rect x="820" y="520" width="180" height="70" rx="16" ry="16" fill="#e0ecff" stroke="#1d4ed8" stroke-width="2" />
    <text x="910" y="562" class="body" text-anchor="middle">3. Authorize rider</text>
    <line x1="1000" y1="555" x2="1120" y2="555" stroke="#1d4ed8" stroke-width="4" marker-end="url(#arrow)" />
    <text x="1060" y="528" class="note" text-anchor="middle">RPC: CreateRideIntent</text>
  </g>

  <g>
    <rect x="1120" y="600" width="220" height="80" rx="16" ry="16" fill="#fee2e2" stroke="#dc2626" stroke-width="2" />
    <text x="1230" y="642" class="body" text-anchor="middle">4. Persist intent + publish</text>
    <line x1="1180" y1="680" x2="1180" y2="780" stroke="#f97316" stroke-width="4" marker-end="url(#arrow-async)" />
    <text x="1220" y="730" class="note" transform="rotate(-90 1220 730)" text-anchor="middle">emit ride.intent.created</text>
  </g>

  <g>
    <rect x="1420" y="740" width="220" height="70" rx="16" ry="16" fill="#dcfce7" stroke="#16a34a" stroke-width="2" />
    <text x="1530" y="782" class="body" text-anchor="middle">5. Locate nearby drivers</text>
    <line x1="1340" y1="775" x2="1420" y2="775" stroke="#16a34a" stroke-width="4" marker-end="url(#arrow)" />
    <text x="1380" y="748" class="note" text-anchor="middle">gRPC: FindCandidates</text>
  </g>

  <g>
    <rect x="1420" y="830" width="220" height="70" rx="16" ry="16" fill="#dcfce7" stroke="#16a34a" stroke-width="2" />
    <text x="1530" y="872" class="body" text-anchor="middle">6. Stream driver pings</text>
    <line x1="1420" y1="900" x2="2100" y2="900" stroke="#f97316" stroke-width="4" stroke-dasharray="20 16" marker-end="url(#arrow-async)" />
    <text x="1760" y="870" class="note" text-anchor="middle">driver.location topic</text>
  </g>

  <g>
    <rect x="1120" y="940" width="220" height="80" rx="16" ry="16" fill="#fee2e2" stroke="#dc2626" stroke-width="2" />
    <text x="1230" y="982" class="body" text-anchor="middle">7. Select best match</text>
    <line x1="1230" y1="1020" x2="1230" y2="1110" stroke="#1d4ed8" stroke-width="4" marker-end="url(#arrow)" />
    <text x="1270" y="1070" class="note" transform="rotate(-90 1270 1070)" text-anchor="middle">Notify driver</text>
  </g>

  <g>
    <rect x="960" y="1110" width="360" height="80" rx="16" ry="16" fill="#fee2e2" stroke="#dc2626" stroke-width="2" />
    <text x="1140" y="1160" class="body" text-anchor="middle">8. Push offers via WebSocket &amp; event bus</text>
    <line x1="960" y1="1150" x2="320" y2="1150" stroke="#1d4ed8" stroke-width="4" marker-end="url(#arrow)" />
    <text x="640" y="1120" class="note" text-anchor="middle">WS ride.offer</text>
    <line x1="1320" y1="1150" x2="1500" y2="1150" stroke="#1d4ed8" stroke-width="4" marker-end="url(#arrow)" />
    <text x="1410" y="1120" class="note" text-anchor="middle">Driver channel</text>
  </g>

  <g>
    <rect x="280" y="960" width="160" height="70" rx="16" ry="16" fill="#ecfeff" stroke="#0f766e" stroke-width="2" />
    <text x="360" y="1000" class="body" text-anchor="middle">9. Accept ride</text>
    <line x1="440" y1="995" x2="1120" y2="995" stroke="#1d4ed8" stroke-width="4" marker-end="url(#arrow)" />
    <text x="780" y="970" class="note" text-anchor="middle">PATCH /rides/{id}</text>
  </g>

  <g>
    <rect x="1720" y="1020" width="220" height="80" rx="16" ry="16" fill="#fef3c7" stroke="#f59e0b" stroke-width="2" />
    <text x="1830" y="1062" class="body" text-anchor="middle">10. Fare estimation &amp; hold</text>
    <line x1="1340" y1="1060" x2="1720" y2="1060" stroke="#f59e0b" stroke-width="4" marker-end="url(#arrow)" />
    <text x="1520" y="1030" class="note" text-anchor="middle">Async queue billing.preauth</text>
    <line x1="1940" y1="1060" x2="2100" y2="1060" stroke="#f97316" stroke-width="4" marker-end="url(#arrow-async)" />
    <text x="2020" y="1030" class="note" text-anchor="middle">Emit billing.hold.created</text>
  </g>

  <g>
    <rect x="1720" y="1160" width="220" height="80" rx="16" ry="16" fill="#fef3c7" stroke="#f59e0b" stroke-width="2" />
    <text x="1830" y="1202" class="body" text-anchor="middle">11. Trip completion</text>
    <line x1="1720" y1="1240" x2="320" y2="1240" stroke="#1d4ed8" stroke-width="4" stroke-dasharray="16 14" marker-end="url(#arrow)" />
    <text x="1000" y="1210" class="note" text-anchor="middle">Status updates → Rider &amp; Driver apps</text>
  </g>

  <g>
    <rect x="1720" y="1280" width="260" height="80" rx="16" ry="16" fill="#fef3c7" stroke="#f59e0b" stroke-width="2" />
    <text x="1850" y="1325" class="body" text-anchor="middle">12. Capture payment &amp; payout driver</text>
    <line x1="1850" y1="1360" x2="1850" y2="1400" stroke="#f97316" stroke-width="4" marker-end="url(#arrow-async)" />
    <text x="1890" y="1380" class="note" text-anchor="start">Events → ledger, payouts pipeline</text>
  </g>

  <!-- Legend -->
  <g transform="translate(1720,200)">
    <rect width="420" height="120" rx="24" ry="24" fill="#ffffff" stroke="#1e293b" stroke-width="3" />
    <g transform="translate(20,28)">
      <line x1="0" y1="16" x2="80" y2="16" stroke="#1d4ed8" stroke-width="4" marker-end="url(#arrow)" />
      <text x="100" y="22" class="body">Synchronous REST/gRPC call</text>
    </g>
    <g transform="translate(20,68)">
      <line x1="0" y1="16" x2="80" y2="16" stroke="#f97316" stroke-width="4" marker-end="url(#arrow-async)" />
      <text x="100" y="22" class="body">Async event or queue message</text>
    </g>
  </g>
</svg>
