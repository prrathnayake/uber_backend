jobs:
  build-and-test:
    runs-on: ubuntu-latest

    steps:
      - name: ‚¨áÔ∏è Checkout repository
        uses: actions/checkout@v3

      - name: ‚öôÔ∏è Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: üîê Log in to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: üß™ Create dummy .env file (if missing)
        run: |
          if [ ! -f .env ]; then
            echo "Creating .env file..."
            cat <<EOF > .env
          MYSQL_ROOT_PASSWORD=root
          MYSQL_USER=pasan
          MYSQL_PASSWORD=pasan
          USERMANAGER_DB=userManagerDatabase
          USERMANAGER_PORT=3307
          USERMANAGER_APP_PORT=8081
          RIDEMANAGER_DB=rideManagerDatabase
          RIDEMANAGER_PORT=3308
          RIDEMANAGER_APP_PORT=8082
          LOCATIONMANAGER_DB=locationManagerDatabase
          LOCATIONMANAGER_PORT=3309
          LOCATIONMANAGER_APP_PORT=8083
          EOF
          fi

      - name: üê≥ Start Docker Compose stack
        run: docker-compose -f docker/docker-compose.yml up --build -d

      - name: ‚è±Ô∏è Wait for services to initialize (10 min)
        run: sleep 600

      # ‚úÖ Test Case 1: Check containers are running
      - name: ‚úÖ Test: All containers are running
        run: |
          docker ps
          docker ps | grep UserManager
          docker ps | grep RideManager
          docker ps | grep LocationManager

      # ‚úÖ Test Case 2: MySQL port test
      - name: ‚úÖ Test: MySQL ports are open
        run: |
          nc -zv localhost 3307
          nc -zv localhost 3308
          nc -zv localhost 3309

      # ‚úÖ Test Case 3: Application port test
      - name: ‚úÖ Test: Application ports are open
        run: |
          nc -zv localhost 8081
          nc -zv localhost 8082
          nc -zv localhost 8083

      # ‚úÖ Test Case 4: UserManager health check (if implemented)
      - name: ‚úÖ Test: Call UserManager HTTP endpoint
        run: curl --fail http://localhost:8081/user/health || echo "‚ùå Health check failed"

      # ‚úÖ Test Case 5: Kafka port test
      - name: ‚úÖ Test: Kafka port
        run: nc -zv localhost 9092

      - name: üì¶ Stop and clean up
        if: always()
        run: docker-compose -f docker/docker-compose.yml down -v
