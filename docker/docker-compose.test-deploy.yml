version: "3.9"

services:
  kafka:
    image: bitnami/kafka:3.6.0
    container_name: kafka-bus
    environment:
      - KAFKA_KRAFT_MODE=true
      - KAFKA_CFG_NODE_ID=1
      - KAFKA_CFG_PROCESS_ROLES=broker,controller
      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092,CONTROLLER://:9093
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT
      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=1@kafka-bus:9093
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://kafka-bus:9092
      - KAFKA_CFG_LOG_DIRS=/bitnami/kafka/data
      - KAFKA_HEAP_OPTS=-Xmx512m -Xms512m
    ports:
      - "${KAFKA_EXTERNAL_PORT:-9092}:9092"
    volumes:
      - kafka_data:/bitnami/kafka/data
    networks:
      - backend

  rabbitmq:
    image: rabbitmq:3-management
    container_name: rabbitmq-bus
    environment:
      RABBITMQ_DEFAULT_USER: ${RABBITMQ_USER:-guest}
      RABBITMQ_DEFAULT_PASS: ${RABBITMQ_PASSWORD:-guest}
      RABBITMQ_DEFAULT_VHOST: ${RABBITMQ_VHOST:-/}
    ports:
      - "${RABBITMQ_HTTP_PORT:-15672}:15672"
      - "${RABBITMQ_AMQP_PORT:-5672}:5672"
    networks:
      - backend

  redis:
    image: redis:7
    container_name: redis-cache
    ports:
      - "${REDIS_PORT:-6379}:6379"
    networks:
      - backend

  mysql_user:
    image: mysql:8
    container_name: mysql-usermanager
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD:-root}
      MYSQL_DATABASE: ${USERMANAGER_DB:-userManagerDatabase}
      MYSQL_USER: ${MYSQL_USER:-uber}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD:-password}
    volumes:
      - mysql_user_data:/var/lib/mysql
    ports:
      - "${USERMANAGER_PORT:-3307}:3306"
    networks:
      - backend

  mysql_ride:
    image: mysql:8
    container_name: mysql-ridemanager
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD:-root}
      MYSQL_DATABASE: ${RIDEMANAGER_DB:-uber_database}
      MYSQL_USER: ${MYSQL_USER:-uber}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD:-password}
    volumes:
      - mysql_ride_data:/var/lib/mysql
    ports:
      - "${RIDEMANAGER_PORT:-3308}:3306"
    networks:
      - backend

  mysql_location:
    image: mysql:8
    container_name: mysql-locationmanager
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD:-root}
      MYSQL_DATABASE: ${LOCATIONMANAGER_DB:-location_database}
      MYSQL_USER: ${MYSQL_USER:-uber}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD:-password}
    volumes:
      - mysql_location_data:/var/lib/mysql
    ports:
      - "${LOCATIONMANAGER_PORT:-3309}:3306"
    networks:
      - backend

  usermanager:
    build:
      context: ..
      dockerfile: docker/Dockerfile.UserManager
    image: uber_usermanager:test
    depends_on:
      - mysql_user
      - kafka
      - rabbitmq
    environment:
      - SERVICE_ROLE=usermanager
    ports:
      - "${USERMANAGER_APP_PORT:-8081}:8081"
    networks:
      - backend

  ridemanager:
    build:
      context: ..
      dockerfile: docker/Dockerfile.RideManager
    image: uber_ridemanager:test
    depends_on:
      - mysql_ride
      - kafka
      - rabbitmq
    environment:
      - SERVICE_ROLE=ridemanager
    ports:
      - "${RIDEMANAGER_APP_PORT:-8082}:8081"
    networks:
      - backend

  locationmanager:
    build:
      context: ..
      dockerfile: docker/Dockerfile.LocationManager
    image: uber_locationmanager:test
    depends_on:
      - mysql_location
      - kafka
      - rabbitmq
    environment:
      - SERVICE_ROLE=locationmanager
    ports:
      - "${LOCATIONMANAGER_APP_PORT:-8083}:8081"
    networks:
      - backend

networks:
  backend:
    driver: bridge

volumes:
  kafka_data:
  mysql_user_data:
  mysql_ride_data:
  mysql_location_data:
